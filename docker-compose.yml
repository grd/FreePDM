
services:
  # Golang gRPC Service
  app:
    build:
      context: .
      dockerfile: Dockerfile # Dockerfile to build your Golang app
    ports:
      - "50051:50051"  # gRPC service port
    environment:
      - GO_DIRECTORY=${GO_DIRECTORY}
      - GO_WORKDIR=${GO_WORKDIR}

      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    volumes:
      - ./app:/go/src/app  # Mount your app source code for easier development
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - app-network
    command: /app/freepdm
    # command: go run cmd/serverapp/main.go  # Start your gRPC server (adjust if needed)
    env_file:
      - .env

  # PostgreSQL Database
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data  # Persist database data
    networks:
      - app-network

  # Samba Service
  samba:
    image: dperson/samba
    ports:
      - "139:139"
      - "445:445"
    environment:
      - TZ=Europe/Amsterdam

    #   - SAMBA_USERS="youruser:yourpassword"
    #   - SAMBA_SHARES="[shared];path=/mount;guest_ok=n;writable=y"
    volumes:
      - ${SHARE_PATH}:/mount  # Directory shared via Samba
    command: >
      -u "${USER1};${PASSWORD1};${UID1}; ${GID}"
      -u "${USER2};${PASSWORD2};${UID2}; ${GID}"
      -s "${SHARE_NAME};/mount;yes;no;yes"
    networks:
      - app-network
    restart: unless-stopped

# Volumes
volumes:
  db_data:  # Persist data for PostgreSQL

# Networks
networks:
  app-network:  # Shared network for all services
